@startuml
left to right direction

package "core" {

interface Entity {
  + id() : int
}

interface MessageSender {
  + send(recipient : int, message : Message) : void
}

interface Repository<E extends Entity> {
  + add(e : E) : E
  + update(e : E) : E
  + get(id : int) : E
  + delete(id : int) : E
}


    interface EmployeesApi {
      + update(e : Employee) : Employee
      + get(id : int) : Employee
    }

    interface ProposalApi {
      + propose(proposal : Proposal) : Proposal
      + approve(id : int, requester : Employee) : void
      + reject(id : int, requester : Employee) : void
    }

    interface PaymentsApi {
      get(id : int, since : long, till : long) : List<Payment>
      add(payment : Payment) : Payment
      award(award : Award) : Payment
    }

    interface CancelApi {
      cancel(id : int, requester : Employee) : void;
    }

    interface TimeHoldersApi {

      track(th : TimeHolder) : TimeHolder

      reserve(th : TimeHolder) : TimeHolder
    }
}


Repository -- Entity
@enduml